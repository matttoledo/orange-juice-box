version: '3.8'

networks:
  traefik_public:
    external: true

  postgresql_network:
    external: true
    name: infrastructure_postgresql_network

  monitoring_net:
    external: true
    name: observability_monitoring_net

services:
  verly-service:
    image: verly-service:latest

    # ========================================
    # CONTAINER HARDENING (OWASP Docker Top 10)
    # ========================================
    # Run as non-root user
    user: "1000:1000"

    # Read-only root filesystem
    read_only: true
    tmpfs:
      - /tmp:rw,noexec,nosuid,size=128M

    # Drop all capabilities
    cap_drop:
      - ALL

    # Prevent privilege escalation
    security_opt:
      - no-new-privileges:true

    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - JAVA_OPTS=-Xmx512m -Xms256m

      # Database connection
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgresql:5432/verly_db
      - SPRING_DATASOURCE_USERNAME=${VERLY_DB_USERNAME:-verly_db_owner}
      - SPRING_DATASOURCE_PASSWORD=${VERLY_DB_PASSWORD}

    networks:
      - traefik_public       # Public access via Traefik
      - postgresql_network   # Database connection
      - monitoring_net       # Prometheus metrics

    deploy:
      mode: replicated
      replicas: 1

      # Resource limits (prevent resource exhaustion)
      resources:
        limits:
          cpus: '1.0'
          memory: 768M
        reservations:
          cpus: '0.25'
          memory: 384M

      # Update strategy (zero-downtime deployment)
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
        monitor: 60s
        order: start-first   # Start new container before stopping old

      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

      # ============================================
      # PORTAINER UI LABELS
      # ============================================
      labels:
        # Service description
        - "description=üöÄ Verly Service - Public REST API (Spring Boot 3.2.5 + Java 21)"

        # Category and organization
        - "category=application"
        - "layer=applications"
        - "component=rest-api"
        - "app-type=public-api"

        # Status and exposure
        - "exposure=internet"
        - "status=production"
        - "critical=true"

        # Technology stack
        - "framework=spring-boot"
        - "language=java"
        - "java-version=21"
        - "spring-version=3.2.5"

        # Security information
        - "protection=waf-coraza,ratelimit-50/min,crowdsec,headers"
        - "hardening=owasp-docker-top-10"
        - "security.user=non-root-1000"
        - "security.filesystem=read-only"
        - "security.capabilities=none"

        # Database connection
        - "database=postgresql"
        - "db-name=verly_db"

        # Deployment info
        - "ci-cd=github-actions"
        - "auto-deploy=true"
        - "rollback=automatic"
        - "zero-downtime=true"

        # Health and monitoring
        - "health-check=/verly-service/actuator/health"
        - "metrics=/verly-service/actuator/prometheus"
        - "monitoring=prometheus,grafana"

        # API documentation
        - "api-docs=/verly-service/swagger-ui.html"
        - "openapi=/verly-service/v3/api-docs"

        # Version and build
        - "version=1.0.0"
        - "build-date=2025-10-21"
        - "git-repo=github.com/matttoledo/verly-service"

        # ============================================
        # TRAEFIK ROUTING LABELS
        # ============================================
        - "traefik.enable=true"
        - "traefik.docker.network=traefik_public"

        # Router configuration
        - "traefik.http.routers.verly-service.rule=Host(`api.verlyvidracaria.com`)"
        - "traefik.http.routers.verly-service.entrypoints=websecure"
        - "traefik.http.routers.verly-service.tls=true"
        - "traefik.http.routers.verly-service.tls.certresolver=letsencrypt"

        # ‚ö†Ô∏è FULL PROTECTION (WAF + Rate Limit + CrowdSec + Headers)
        # This provides complete security for internet-facing applications
        - "traefik.http.routers.verly-service.middlewares=auto-public-protection@file"

        # Service configuration
        - "traefik.http.services.verly-service.loadbalancer.server.port=8080"

        # Health check
        - "traefik.http.services.verly-service.loadbalancer.healthcheck.path=/verly-service/actuator/health"
        - "traefik.http.services.verly-service.loadbalancer.healthcheck.interval=30s"
        - "traefik.http.services.verly-service.loadbalancer.healthcheck.timeout=10s"

    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/verly-service/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 90s

    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=verly-service"
