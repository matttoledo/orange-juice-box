version: '3.8'

networks:
  traefik_public:
    external: true

  postgresql_network:
    external: true
    name: infrastructure_postgresql_network

  monitoring_net:
    external: true
    name: observability_monitoring_net

services:
  verly-service:
    image: verly-service:latest

    # ========================================
    # CONTAINER HARDENING (OWASP Docker Top 10)
    # ========================================
    # NOTE: Hardening temporarily disabled for compatibility
    # TODO: Re-enable after ensuring app supports:
    #   - Non-root user (1000:1000)
    #   - Read-only filesystem
    #   - No capabilities
    #
    # user: "1000:1000"
    # read_only: true
    # tmpfs:
    #   - /tmp:rw,nosuid,size=256M
    # cap_drop:
    #   - ALL
    # security_opt:
    #   - no-new-privileges:true

    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - JAVA_OPTS=-Xmx512m -Xms256m

      # Database connection
      - SPRING_DATASOURCE_URL=jdbc:postgresql://infrastructure_postgresql:5432/verly_db
      - SPRING_DATASOURCE_USERNAME=${VERLY_DB_USERNAME:-verly_db_owner}
      - SPRING_DATASOURCE_PASSWORD=${VERLY_DB_PASSWORD}

    networks:
      - traefik_public       # Public access via Traefik
      - postgresql_network   # Database connection
      - monitoring_net       # Prometheus metrics

    deploy:
      mode: replicated
      replicas: 1

      # Resource limits (prevent resource exhaustion)
      resources:
        limits:
          cpus: '1.0'
          memory: 768M
        reservations:
          cpus: '0.25'
          memory: 384M

      # Update strategy (zero-downtime deployment)
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
        monitor: 60s
        order: start-first   # Start new container before stopping old

      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

      # ============================================
      # LABELS (Portainer UI + Traefik Routing)
      # ============================================
      labels:
        # Portainer UI (essential only)
        - "description=ðŸš€ Verly Service - Public REST API"
        - "category=application"
        - "layer=applications"
        - "exposure=internet"
        - "protection=ratelimit+crowdsec+headers"

        # Traefik Routing (CRITICAL - DO NOT REMOVE)
        - "traefik.enable=true"
        - "traefik.docker.network=traefik_public"
        - "traefik.http.routers.verly-service.rule=Host(`api.verlyvidracaria.com`)"
        - "traefik.http.routers.verly-service.entrypoints=websecure"
        - "traefik.http.routers.verly-service.tls=true"
        - "traefik.http.routers.verly-service.tls.certresolver=letsencrypt"
        - "traefik.http.routers.verly-service.middlewares=auto-public-protection@file"
        - "traefik.http.services.verly-service.loadbalancer.server.port=8080"
        - "traefik.http.services.verly-service.loadbalancer.healthcheck.path=/verly-service/actuator/health"
        - "traefik.http.services.verly-service.loadbalancer.healthcheck.interval=30s"

    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/verly-service/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 90s

    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=verly-service"
